apply plugin: 'com.android.application'
apply plugin: 'com.bugtags.library.plugin'
apply plugin: 'realm-android'
//apply plugin: 'com.sensorsdata.analytics.android'
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.icourt.alpha"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        multiDexEnabled true
        versionCode 11
        versionName "v2.0.2" //3位版本号
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Other"]//default_channel
        ndk {
            //请勿轻易修改
            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
        }
    }

    //渠道Flavors_打包
    productFlavors {
        BaiDu {}
//        XiaoMi {}
//        Tencent {}
//        HuaWei {}
    }

    //批量配置
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}_${releaseFormatTime()}.apk")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
    //签名
    signingConfigs {
        release {
            keyAlias 'keystore'
            keyPassword 'icourt@123'
            storeFile file('keystore.jks')
            storePassword 'icourt@123'
        }
    }

    buildTypes {
        debug {
//            ndk {
//                abiFilters = ["armeabi"]
//            }
            buildConfigField "int", "BUILD_TYPE_INT", "0"
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "String", "APK_RELEASE_TIME", "\"${releaseTime()}\""
            buildConfigField "String", "API_URL", rootProject.ext.alphaAPIUrl.api_url_debug
            buildConfigField "String", "API_CHAT_URL", rootProject.ext.alphaChatAPIUrl.api_chat_url_debug
            buildConfigField "String", "API_SFILE_URL", rootProject.ext.alphaSFileUrl.api_url_debug
            buildConfigField "String", "APK_UPDATE_URL", rootProject.ext.alphaApkUpdateUrl.apk_update_url_debug
            buildConfigField "String", "API_SENSORS_DATA_SERVER", rootProject.ext.sensorsDataAPIServer.server_url_debug
            buildConfigField "String", "API_SENSORS_DATA_CONFIGURE", rootProject.ext.sensorsDataAPIConfigure.configure_url_debug
            versionNameSuffix "_debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            manifestPlaceholders = [NIM_APPKEY: rootProject.ext.nimAppKey.debugAppKey]

            //用正式
            buildConfigField "String", "API_URL", rootProject.ext.alphaAPIUrl.api_url_release
            buildConfigField "String", "API_CHAT_URL", rootProject.ext.alphaChatAPIUrl.api_chat_url_release
            buildConfigField "String", "API_SFILE_URL", rootProject.ext.alphaSFileUrl.api_url_release
            buildConfigField "String", "APK_UPDATE_URL", rootProject.ext.alphaApkUpdateUrl.apk_update_url_release
            manifestPlaceholders = [NIM_APPKEY: rootProject.ext.nimAppKey.releaseAppKey]
            buildConfigField "String", "API_SENSORS_DATA_SERVER", rootProject.ext.sensorsDataAPIServer.server_url_release
            buildConfigField "String", "API_SENSORS_DATA_CONFIGURE", rootProject.ext.sensorsDataAPIConfigure.configure_url_release
            //测试用
            buildConfigField "String", "API_URL", rootProject.ext.alphaAPIUrl.api_url_test
            buildConfigField "String", "API_CHAT_URL", rootProject.ext.alphaChatAPIUrl.api_chat_url_test
            buildConfigField "String", "API_SFILE_URL", rootProject.ext.alphaSFileUrl.api_url_test
            buildConfigField "String", "APK_UPDATE_URL", rootProject.ext.alphaApkUpdateUrl.apk_update_url_test
            buildConfigField "String", "API_SENSORS_DATA_SERVER", rootProject.ext.sensorsDataAPIServer.server_url_test
            buildConfigField "String", "API_SENSORS_DATA_CONFIGURE", rootProject.ext.sensorsDataAPIConfigure.configure_url_test
            manifestPlaceholders = [NIM_APPKEY: rootProject.ext.nimAppKey.testAppKey]
            //预览版用
            /*buildConfigField "String", "API_URL", rootProject.ext.alphaAPIUrl.api_url_preview
            buildConfigField "String", "API_CHAT_URL", rootProject.ext.alphaChatAPIUrl.api_chat_url_preview
            buildConfigField "String", "API_SFILE_URL", rootProject.ext.alphaSFileUrl.api_url_preview
            buildConfigField "String", "APK_UPDATE_URL", rootProject.ext.alphaApkUpdateUrl.apk_update_url_preview
            buildConfigField "String", "API_SENSORS_DATA_SERVER", rootProject.ext.sensorsDataAPIServer.server_url_preview
            buildConfigField "String", "API_SENSORS_DATA_CONFIGURE", rootProject.ext.sensorsDataAPIConfigure.configure_url_preview
            manifestPlaceholders = [NIM_APPKEY: rootProject.ext.nimAppKey.previewAppKey]*/
        }
        //内测版
        innertest {
            buildConfigField "int", "BUILD_TYPE_INT", "1"
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "String", "APK_RELEASE_TIME", "\"${releaseTime()}\""
            buildConfigField "String", "API_URL", rootProject.ext.alphaAPIUrl.api_url_test
            buildConfigField "String", "API_CHAT_URL", rootProject.ext.alphaChatAPIUrl.api_chat_url_test
            buildConfigField "String", "API_SFILE_URL", rootProject.ext.alphaSFileUrl.api_url_test
            buildConfigField "String", "APK_UPDATE_URL", rootProject.ext.alphaApkUpdateUrl.apk_update_url_test
            versionNameSuffix "_test"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            manifestPlaceholders = [NIM_APPKEY: rootProject.ext.nimAppKey.testAppKey]
            buildConfigField "String", "API_SENSORS_DATA_SERVER", rootProject.ext.sensorsDataAPIServer.server_url_test
            buildConfigField "String", "API_SENSORS_DATA_CONFIGURE", rootProject.ext.sensorsDataAPIConfigure.configure_url_test
        }
        //预览版
        preview {
            buildConfigField "int", "BUILD_TYPE_INT", "2"
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "String", "APK_RELEASE_TIME", "\"${releaseTime()}\""
            buildConfigField "String", "API_URL", rootProject.ext.alphaAPIUrl.api_url_preview
            buildConfigField "String", "API_CHAT_URL", rootProject.ext.alphaChatAPIUrl.api_chat_url_preview
            buildConfigField "String", "API_SFILE_URL", rootProject.ext.alphaSFileUrl.api_url_preview
            buildConfigField "String", "APK_UPDATE_URL", rootProject.ext.alphaApkUpdateUrl.apk_update_url_preview
            versionNameSuffix "_preview"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            manifestPlaceholders = [NIM_APPKEY: rootProject.ext.nimAppKey.previewAppKey]
            buildConfigField "String", "API_SENSORS_DATA_SERVER", rootProject.ext.sensorsDataAPIServer.server_url_preview
            buildConfigField "String", "API_SENSORS_DATA_CONFIGURE", rootProject.ext.sensorsDataAPIConfigure.configure_url_preview
        }
        //内部版
        innerrelease {
            buildConfigField "int", "BUILD_TYPE_INT", "3"
            buildConfigField "boolean", "IS_DEBUG", "false"
            buildConfigField "String", "APK_RELEASE_TIME", "\"${releaseTime()}\""
            buildConfigField "String", "API_URL", rootProject.ext.alphaAPIUrl.api_url_release
            buildConfigField "String", "API_CHAT_URL", rootProject.ext.alphaChatAPIUrl.api_chat_url_release
            buildConfigField "String", "API_SFILE_URL", rootProject.ext.alphaSFileUrl.api_url_release
            buildConfigField "String", "APK_UPDATE_URL", rootProject.ext.alphaApkUpdateUrl.apk_update_url_inner_release
            versionNameSuffix "_inner_release"
            shrinkResources false   // 移除无用的resource文件
            zipAlignEnabled false        //Zipalign优化
            minifyEnabled false     //混淆
            signingConfig signingConfigs.release
            pseudoLocalesEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            manifestPlaceholders = [NIM_APPKEY: rootProject.ext.nimAppKey.releaseAppKey]
            buildConfigField "String", "API_SENSORS_DATA_SERVER", rootProject.ext.sensorsDataAPIServer.server_url_release
            buildConfigField "String", "API_SENSORS_DATA_CONFIGURE", rootProject.ext.sensorsDataAPIConfigure.configure_url_release
        }
        //内部版 每天发版本
        innerrelease_daily {
            buildConfigField "int", "BUILD_TYPE_INT", "4"
            buildConfigField "boolean", "IS_DEBUG", "false"
            buildConfigField "String", "APK_RELEASE_TIME", "\"${releaseTime()}\""
            buildConfigField "String", "API_URL", rootProject.ext.alphaAPIUrl.api_url_release
            buildConfigField "String", "API_CHAT_URL", rootProject.ext.alphaChatAPIUrl.api_chat_url_release
            buildConfigField "String", "API_SFILE_URL", rootProject.ext.alphaSFileUrl.api_url_release
            buildConfigField "String", "APK_UPDATE_URL", rootProject.ext.alphaApkUpdateUrl.apk_update_url_inner_release_daily
            versionNameSuffix "_inner_release_daily"
            shrinkResources false   // 移除无用的resource文件
            zipAlignEnabled false        //Zipalign优化
            minifyEnabled false     //混淆
            signingConfig signingConfigs.release
            pseudoLocalesEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            manifestPlaceholders = [NIM_APPKEY: rootProject.ext.nimAppKey.releaseAppKey]
            buildConfigField "String", "API_SENSORS_DATA_SERVER", rootProject.ext.sensorsDataAPIServer.server_url_release
            buildConfigField "String", "API_SENSORS_DATA_CONFIGURE", rootProject.ext.sensorsDataAPIConfigure.configure_url_release
        }
        //正式上线版
        release {
            buildConfigField "int", "BUILD_TYPE_INT", "5"
            buildConfigField "boolean", "IS_DEBUG", "false"
            buildConfigField "String", "APK_RELEASE_TIME", "\"${releaseTime()}\""
            buildConfigField "String", "API_URL", rootProject.ext.alphaAPIUrl.api_url_release
            buildConfigField "String", "API_CHAT_URL", rootProject.ext.alphaChatAPIUrl.api_chat_url_release
            buildConfigField "String", "API_SFILE_URL", rootProject.ext.alphaSFileUrl.api_url_release
            buildConfigField "String", "APK_UPDATE_URL", rootProject.ext.alphaApkUpdateUrl.apk_update_url_release
            shrinkResources false   // 移除无用的resource文件
            zipAlignEnabled false        //Zipalign优化
            minifyEnabled false     //混淆
            signingConfig signingConfigs.release
            pseudoLocalesEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            manifestPlaceholders = [NIM_APPKEY: rootProject.ext.nimAppKey.releaseAppKey]
            buildConfigField "String", "API_SENSORS_DATA_SERVER", rootProject.ext.sensorsDataAPIServer.server_url_release
            buildConfigField "String", "API_SENSORS_DATA_CONFIGURE", rootProject.ext.sensorsDataAPIConfigure.configure_url_release
        }
    }
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'sign.properties'
        exclude 'keystore.jks'
    }
    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }

    dexOptions {
        jumboMode = true  //支持最大工程模式
        javaMaxHeapSize "10g"
        //incremental false//使用增量模式

        preDexLibraries = false //预编译
        threadCount = "8" //线程数目
    }

}
//定义打包时间格式化
def releaseFormatTime() {
    return new Date().format("yyyy-MM-dd HH:mm", TimeZone.getDefault())
}
// 定义打包时间戳
def releaseTime() {
    return new Date().getTime();
}

bugtags {
    //自动上传符号表功能配置，如果需要根据 build varint 配置，请参考插件详细使用说明
    appKey "10420c3f18b352cf5613d9eb786a6e09"
    appSecret "b70c4385c5e9727d48ba1ee4d95c8b94"
    mappingUploadEnabled true

    //网络跟踪功能配置(企业版)
    //trackingNetworkEnabled true
}

repositories {
    flatDir {
        dirs 'aars'
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //compile rootProject.ext.dependencies.constraintLayout
    // compile rootProject.ext.dependencies.junit
    compile rootProject.ext.dependencies.multidex
    compile rootProject.ext.dependencies.bugtags
    //------------  Android support  -----------
    compile rootProject.ext.dependencies.supportV4
    compile rootProject.ext.dependencies.design
    compile rootProject.ext.dependencies.appcompatV7
    compile rootProject.ext.dependencies.cardview
    //------------  recyclerview  -------------
    compile rootProject.ext.dependencies.recyclerview
    compile rootProject.ext.dependencies.recyclerview_animators
    compile rootProject.ext.dependencies.recyclerview_divider
    //------------  通信  --------------
    compile rootProject.ext.dependencies.eventbus
    //------------  网络  ----------
    compile project(':api')
    //------------  rxAndroid-----------
    compile rootProject.ext.dependencies.rxAndroid
    //compile rootProject.ext.dependencies.rxJava
    compile rootProject.ext.dependencies.topsnackbar
    compile rootProject.ext.dependencies.glide
    compile rootProject.ext.dependencies.xrefreshview
    compile rootProject.ext.dependencies.logger
    compile 'com.trello.rxlifecycle2:rxlifecycle:2.1.0'
    compile 'com.trello.rxlifecycle2:rxlifecycle-android:2.1.0'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.kaopiz:kprogresshud:1.1.0'
    compile 'com.liulishuo.filedownloader:library:1.3.0'
    compile 'q.rorbin:badgeview:1.1.0'
    compile 'cn.finalteam:galleryfinal:1.4.8.7'
    compile 'com.gjiazhe:wavesidebar:1.3'
    // 基础功能 (必需)
    compile 'com.netease.nimlib:basesdk:4.0.0'
    // 音视频需要
    //    compile 'com.netease.nimlib:avchat:3.2.0'
    // 聊天室需要
    //    compile 'com.netease.nimlib:chatroom:3.2.0'
    //compile 'com.vanniktech:emoji-one:0.4.0'
    compile 'com.github.w446108264:XhsEmoticonsKeyboard:2.0.4'
    compile 'com.github.w446108264:AndroidEmoji:1.3-withsource'
    compile 'com.contrarywind:Android-PickerView:3.2.4'
    compile 'com.github.sundeepk:compact-calendar-view:2.0.2.1'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.github.lecho:hellocharts-library:1.5.8@aar'
    compile project(':lib_calendar')
    //compile 'com.sensorsdata.analytics.android:SensorsAnalyticsSDK:1.7.12'
    compile project(path: ':lib_daemon')
    compile files('libs/MiPush_SDK_Client_3_4_3.jar')
    compile(name: 'HMS-SDK-2.4.0.300', ext: 'aar')
}

